<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/"
	debug="false">
	<!-- ============================== -->
	<!-- Append messages to the console -->
	<!-- ============================== -->
	<!--输出方式：输出到控制台-->
	<appender name="myConsole" class="org.apache.log4j.ConsoleAppender">
		<!--
			设置通道名称：console和输出方式：org.apache.log4j.RollingFileAppender
			其中输出方式appender有5种,分别为 org.apache.log4j.ConsoleAppender (控制台)
			org.apache.log4j.FileAppender (文件)
			org.apache.log4j.DailyRollingFileAppender (每天产生一个日志文件)
			org.apache.log4j.WriterAppender (将日志信息以流格式发送到任意指定的地方)
		-->
		<param name="Target" value="System.out" />
		<param name="Threshold" value="INFO" />
		<!--Threshold是个全局的过滤器，他将把低于所设置的level的信息过滤不显示出来-->
		<!--
			level:是日记记录的优先级，优先级由高到低分为 OFF ,FATAL ,ERROR ,WARN ,INFO ,DEBUG ,ALL。
			Log4j建议只使用FATAL ,ERROR ,WARN ,INFO ,DEBUG这四个级别。
		-->
		<layout class="org.apache.log4j.PatternLayout">
			<!-- 设置日志输出的格式-->
			<!--
				参数都以%开始后面不同的参数代表不同的格式化信息（参数按字母表顺序列出）： %c 输出所属类的全名，可在修改为 %d{Num}
				,Num类名输出的围 如："org.apache.elathen.ClassName",
				%C{2}将输出elathen.ClassName %d 输出日志时间其格式为 %d{yyyy-MM-dd
				HH:mm:ss,SSS}，可指定格式 如 %d{HH:mm:ss} %l 输出日志事件发生位置，包括类目名、发生线程，在代码中的行数
				%n 换行符 %m 输出代码指定信息，如info(“message”),输出message %p 输出优先级，即 FATAL
				,ERROR 等 %r 输出从启动到显示该log信息所耗费的毫秒数 %t 输出产生该日志事件的线程名
			-->
			<!-- The default pattern: Date Priority [Category] Message＼n -->
			<param name="ConversionPattern" value="%d{ABSOLUTE} %-5p [%c{1}] %m%n" />
		</layout>
	</appender>
	<!--
		========================== 自定义输出格式说明================================
	-->
	<!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
	<!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数  -->
	<!-- #%c 输出所属的类目，通常就是所在类的全名 -->
	<!-- #%t 输出产生该日志事件的线程名 -->
	<!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->
	<!--
		#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd
		HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
	-->
	<!--
		#%l
		输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
	-->
	<!--
		==========================================================================
	-->

	<!--
		========================== 输出方式说明================================
	-->
	<!-- Log4j提供的appender有以下几种:  -->
	<!-- org.apache.log4j.ConsoleAppender(控制台),  -->
	<!-- org.apache.log4j.FileAppender(文件),  -->
	<!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->
	<!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->
	<!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->
	<!--
		==========================================================================
	-->
	<!-- 输出到日志文件  -->
	<appender name="filelog_appender" class="org.apache.log4j.RollingFileAppender">
		<!-- 设置File参数：日志输出文件名 -->
		<param name="File" value="log/testlog4jxml_all.log" />
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
		<param name="Append" value="true" />
		<!-- 设置文件大小 -->
		<param name="MaxFileSize" value="1MB" />
		<!-- 设置文件备份 -->
		<param name="MaxBackupIndex" value="10000" />
		<!-- 设置输出文件项目和格式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p (%c:%L)- %m%n" />
		</layout>
	</appender>

	<!-- 输出到日志文件 每天一个日志  -->
	<appender name="filelog_daily" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="log/daily.log" />
		<param name="DatePattern" value="'daily.'yyyy-MM-dd'.log'" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"
				value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] (%c:%L) - %m%n" />
		</layout>
	</appender>

	<!-- 输出到控制台中 -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p: %m%n" />
			<!-- "%-5p: [%t] [%c{3}.%M(%L)] | %m%n" -->
		</layout>
	</appender>

	<appender name="EMAIL_QQ" class="org.apache.log4j.net.SMTPAppender">
		<param name="Threshold" value="INFO" />
		<param name="BufferSize" value="128" />
		<param name="SMTPHost" value="smtp.qq.com" />
		<param name="SMTPUsername" value="cjjvictory" />
		<param name="SMTPPassword" value="***" />
		<param name="From" value="cjjvictory@qq.com" />
		<param name="To" value="cjjvictory@gmail.com" />
		<param name="Subject" value="测试邮件发送" />
		<param name="LocationInfo" value="true" />
		<param name="SMTPDebug" value="true" />
		<layout class="org.cjj.log4j.extend.PatternLayout_zh">
			<param name="ConversionPattern" value="[%d{ISO8601}] %-5p %c %m%n" />
		</layout>
	</appender>

	<!--- 异步测试，当日志达到缓存区大小时候执行所包的appender -->
	<appender name="ASYNC_test" class="org.apache.log4j.AsyncAppender">
		<param name="BufferSize" value="10" />
		<appender-ref ref="EMAIL_QQ" />
	</appender>
	<!-- 根logger的设置-->
	<root>
		<priority value="INFO" />
		<appender-ref ref="myConsole" />
		<appender-ref ref="filelog_daily" />  
	</root>
</log4j:configuration>

